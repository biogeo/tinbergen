---
name: Example Tinbergen ethogram, YAML style
description: This is an ethogram.
entries:
  - event: Momentary-behavior
    type: moment
    description:
      A behavior that takes only a moment, or which we are not interested in the
      duration of.
  - code: mo
    obs:
      event: Momentary-behavior

  - event: Binary-state
    type: binary
    description:
      A behavioral state which we can always describe as either true or false,
      or on or off.
  - code: bst
    obs:
      event: Binary-state
      value: true
  - code: bsf
    obs:
      event: Binary-state
      value: false

  - event: Multiple-state
    type: state
    description:
      A behavioral state which we can always describe as in one of several
      values (such as postural/locomotive, here).
    values: [prone, sitting, standing, walking, running]
  - code: mpr
    obs: {event: Multiple-state, value: prone}
  - code: msi
    obs: {event: Multiple-state, value: sitting}
  - code: mst
    obs: {event: Multiple-state, value: standing}
  - code: mwa
    obs: {event: Multiple-state, value: walking}
  - code: mru
    obs: {event: Multiple-state, value: running}

  - event: Variable-state
    type: variable
    description:
      A behavioral state which we can always describe has having some
      unconstrained value (such as a count of something).
  - code: vs
    args: [val]
    obs:
      event: Variable-state
      value: =val

  # We can also easily attach subjects in this way
  - code: mob
    args: [sub]
    obs:
      event: Momentary-behavior
      subject: =sub

  - event: Interval-behavior
    type: interval
    description:
      A behavior which has some duration we are interested in.
  - code: ibs
    obs:
      event: Interval-behavior
  # Perhaps introduce a special observation type for terminating intervals.
  # This will require giving each observation an identifier that the coder can
  # reference to end interval behaviors.
  - code: end
    args: [id]
    obs:
      terminate: =id

  # How about this as a rule for interaction roles:
  # An interaction role is a special kind of behavior. When defining an
  # interaction, one or more roles are created. These roles can be specified
  # either as a name or as a mapping with the key "name", and optionally
  # "description" and other keys. Then these roles are present in the ethogram
  # effectively as behaviors named <interaction-name>:<role-name>, with kind
  # <interaction-kind>, and other keys taken as given.
  # Interactions should only be of kind "moment" or "interval". The user is
  # nevertheless free to specify values or other data as desired.
  - interaction: Momentary-interaction
    roles: [Initiate, Receive]   # This is an asymetric interaction
    type: moment
    description:
      An interaction between two animals, an initiator and a recipient, that
      only takes a moment, or which we are not interested in the duration of.
  - code: mi
    args: [initiator, receiver]
    obs:
      interaction: Momentary-interaction
      roles:
        - name: Initiate
          subject: =initiator
        - name: Receive
          subject: =receiver

  - interaction: Interval-interaction
    roles: [Participate]   # This is a symmetric interaction
    type: interval
    description:
      A symmetric interaction between two animals (ie, there is no distinction
      between the behaviors of the two individuals participating in the
      interaction) that has some duration.
  - code: ii
    args: [p1, p2]
    obs:
      interaction: Interval-interaction
      roles:
        - name: Participate
          subject: =p1
        - name: Participate
          subject: =p2
  # This interaction can be ended using the same "end" code as above.
...
